#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    macros {
        flash_macro: flash_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 16>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 22>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <29 30>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <34 35>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <42 43>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <47 48>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <18 20>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <31 33>;
        };

        Function_layer {
            bindings = <&none>;
            key-positions = <56 60>;
            layers = <3>;
        };

        Caps_lock {
            bindings = <&none>;
            key-positions = <39 51>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Qwery {
            bindings = <
&kp ESCAPE       &kp N1          &kp N2          &kp N3               &kp N4            &kp N5          &kp UP_ARROW     &kp N6        &kp N7             &kp N8               &kp N9                   &kp N0               &kp BACKSPACE
&as TILDE GRAVE  &kp Q           &kp W           &kp E                &kp R             &kp T           &kp DOWN_ARROW   &kp Y         &kp U              &kp I                &kp O                    &kp P                &kp BACKSLASH
&kp TAB          &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D   &hm LEFT_SHIFT F  &ltq 2 G        &kp LEFT_ARROW   &ltq 1 H      &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L          &as COLON SEMICOLON  &as DOUBLE_QUOTES SQT
&kp LSHFT        &kp Z           &kp X           &kp C                &kp V             &kp B           &kp RIGHT_ARROW  &kp N         &kp M              &as LESS_THAN COMMA  &as GREATER_THAN PERIOD  &as QUESTION SLASH   &kp RIGHT_SHIFT
&to 5            &kp LCTRL       &kp LALT        &hm C_MENU LEFT_WIN  &ltq 1 TAB        &ltq 2 ENTER    &to 6            &ltq 2 SPACE  &ltq 1 BACKSPACE   &hm INS DELETE       &kp RALT                 &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "Qwery";
        };

        Numbers {
            bindings = <
&trans     &trans        &trans        &trans        &trans        &trans       &trans  &trans          &trans              &trans               &trans           &trans           &trans
&kp TILDE  &kp SLASH     &kp N7        &kp N8        &kp N9        &kp MINUS    &trans  &kp LESS_THAN   &kp GREATER_THAN    &kp AMPERSAND        &kp PIPE         &kp EXCLAMATION  &trans
&kp EQUAL  &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS     &trans  &kp LEFT_ARROW  &kp DOWN_ARROW      &kp DOWN_ARROW       &kp RIGHT_ARROW  &kp PAGE_UP      &kp LC(HOME)
&kp COLON  &kp PERIOD    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp N0       &trans  &kp HOME        &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp END          &kp PAGE_DOWN    &kp LC(END)
&trans     &trans        &trans        &trans        &trans        &trans       &trans  &trans          &trans              &trans               &trans           &trans
            >;

            label = "Navi";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Symbol {
            bindings = <
&trans  &trans           &trans          &trans          &trans           &trans             &mmv MOVE_UP     &trans     &trans          &trans                   &trans                 &trans                 &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN     &kp HASH        &kp DOLLAR       &kp PERCENT        &mmv MOVE_DOWN   &kp CARET  &kp AMPERSAND   &kp ASTERISK             &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &mkp MB4         &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &mkp MCLK          &mmv MOVE_LEFT   &kp MINUS  &kp UNDERSCORE  &kp PLUS                 &kp LEFT_BRACE         &kp RIGHT_BRACE        &kp NON_US_BACKSLASH
&trans  &msc SCRL_LEFT   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT    &mmv MOVE_RIGHT  &kp GRAVE  &as PLUS MINUS  &as DOUBLE_QUOTES EQUAL  &as PIPE LEFT_BRACKET  &kp RIGHT_BRACKET      &trans
&trans  &trans           &trans          &trans          &trans           &trans             &mkp LCLK        &trans     &trans          &trans                   &trans                 &trans
            >;

            label = "Symbol";
            sensor-bindings = <&scroll_encoder>;
        };

        Modify {
            bindings = <
&trans  &trans   &trans   &trans        &trans        &trans          &trans  &trans        &trans             &trans              &trans                &trans                &trans
&trans  &kp F1   &kp F2   &kp F3        &kp F4        &kp F5          &trans  &trans        &trans             &trans              &trans                &trans                &trans
&trans  &kp F6   &kp F7   &kp F8        &kp F9        &kp F10         &trans  &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F11  &kp F12  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &trans  &kp C_REWIND  &kp C_PLAY_PAUSE   &kp C_FAST_FORWARD  &bl BL_DEC            &bl BL_INC            &trans
&trans  &trans   &trans   &trans        &trans        &trans          &trans  &trans        &trans             &trans              &trans                &trans
            >;

            label = "Modify";
        };

        Flash {
            bindings = <
&flash_macro  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans        &trans
            >;

            display-name = "Flash";
        };

        Rgb {
            bindings = <
&ext_power EP_TOG  &trans  &trans  &trans  &trans           &rgb_ug RGB_SPI    &rgb_ug RGB_HUI  &rgb_ug RGB_SPD  &trans           &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR    &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_SAI  &trans           &trans           &trans  &trans  &trans  &trans
&trans             &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_SAD  &trans           &trans           &trans  &trans  &trans  &trans
&to 0              &trans  &trans  &trans  &trans           &trans             &rgb_ug RGB_TOG  &trans           &trans           &trans  &trans  &trans
            >;

            label = "Rgb";
            sensor-bindings = <&rgb_encoder &scroll_encoder>;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_UP     &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_DOWN   &trans     &trans          &mmv MOVE_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_LEFT   &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &mmv MOVE_RIGHT  &trans     &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK    &to 0            &mkp LCLK  &mkp RCLK       &trans          &trans           &trans
            >;

            label = "Mouse";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Flash {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
